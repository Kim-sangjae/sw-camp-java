문제 해결

1. 도메인 엔티티에 Serializable 구현하지 않아 직렬화가 안되었음
    -> implements Serializable

2. storage 로드시 기존에 파일이 있지만 비어있는경우 EOF Exception 발생
    -> storage 로드시 파일이 있어도 내용이 비어있을경우 빈 객체하나 생성해서 해결

3. 상품이나 유저 등록시 고유코드를 size로 측정해서 넣었더니 삭제후 , 신규 추가 할시 고유코드가 겹치는 경우가 있다
    -> 각 레포에 private int nextUserCode = 1; 같이 고유값은 고정시킨 후
    -> 파일을 읽어올때 비어있지않다면 거기서 최대 고유값을 가져와서 초기화 시킴

4. ADMIN , USER 하나의 컨트롤러로 관리하려하니 제약이 많아짐 (회원가입 , 전체조회 등)
    -> 9988 ADMIN 만의 메뉴코드를 만들어서 관리자 메뉴를 따로 만들어 기능 구현

5. 뽑기아이템을 뽑은 후 아이템을 삭제 시켰는데 그러면 추후 확인이 불가능
    -> HistoryDB 를 만들어 기록을 관리

6. 유저 수정시 빈값 누르면 원래 있던 값으로 들어가게 했으나 검증과정에서 Duplicate 가 발생하여 수정안된다
    -> 원래있던 값으로 들어오지 않을때만 검증하게 변경

7. 유저 정보 수정 후 그대로 메뉴 출력하니 최신 업데이트가 안된다
    -> 수정후 메인메뉴로 돌려보내 최신 파일을 읽어오도록 수정

8. 히스토리로 Map<String, List<String>> 를 토대로 아이템의 name 값만 남기니 기존 아이템의 상세정보 확인 불가
    -> Map<String , List<DrawItem>> 으로 변경하여 아이템 그 자체를 받아와 저장
    -> 추후 유저도 히스토리를 남기려면 같은 과정 필요 or 삭제가아닌 soft_delete 방식 구현

9. 아이템을 관리자가 하나씩 추가 하게 만들어 너무 번거로워짐
    -> 초기 아이템 데이터 ItemInitialAdd 클래스를 만들어 메인 컨트롤러 실행시 아이템이 비어있으면 추가하도록 설정

10. 엔티티에 getter만 썼더니 userMoney 같은 값을 변경하기가 너무 번거로워짐
    -> 처음엔 충전할때 레포에 새로운 메서드를 만들어서 가져왔지만
    -> 뽑기 후에 set을 계속 남발해 새로운 객체가 계속 생성되는 문제가생김
    -> User 탭에 Money는 가져올수있도록 updateMoney 메서드 생성
    -> 뽑기시 바뀌는 돈은 간단하게 값을 수정하도록 설정

11. 랭킹이나 history 는 현재 historyDB 에서 가져와 쓰는데 실제로 뽑은 물건이 유저가 소유하지않는 문제가있다
    -> 추후 유저 속성에 List를 둬서 뽑은 물건을 유저 자체가 가지고있게 로직 변경 고려
    -> HistoryDB 에 유령데이터가아닌 랭킹같은거나 내 물품 조회같은 기능을 직접 유저에게서 뽑아올수있게 만들어야함

12. USer 메인 클래스에서 상품 뽑기까지 모두 해결하려니 너무 길어진다
    -> Draw컨트롤러 따로 만들어 User메인에 연결

13. 현재 USer 컨트롤러에 너무많이 메서드가 정의되어있음
    -> 추후 Main 컨트롤러 따로만든 뒤
    -> 유저 , 뽑기, 아이템 서비스클래스로 각각 나눠서 정리 요망
